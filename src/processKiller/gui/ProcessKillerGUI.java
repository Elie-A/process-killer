/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package processKiller.gui;

import com.sun.glass.events.KeyEvent;
import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import processKiller.utilities.Utilities;

/**
 *
 * @author eliabdallah
 */
public class ProcessKillerGUI extends javax.swing.JFrame {

    boolean started = false;
    Thread getProcessThread;

    ArrayList<String> list;

    Utilities utilities = new Utilities();

    /**
     * Creates new form ProcessKillerGUI
     */
    public ProcessKillerGUI() {
        initComponents();
        Font tableHeaderFont = new Font("Lucida Console", Font.BOLD, 16);
        processTbl.getTableHeader().setFont(tableHeaderFont);
        Font tableFont = new Font("Lucida Console", Font.PLAIN, 13);
        processTbl.setFont(tableFont);
        pidRadioButton.setSelected(true);
        stopThreadBtn.setEnabled(false);
        killProcessBtn.setEnabled(false);
        list = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        processTbl = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        getProcBtn = new javax.swing.JButton();
        stopThreadBtn = new javax.swing.JButton();
        killProcessBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        refreshRateTxt = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        pidRadioButton = new javax.swing.JRadioButton();
        imageNameRadioButton = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        logsTxt = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(900, 600));
        setMinimumSize(new java.awt.Dimension(900, 600));
        setResizable(false);

        processTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Image Name", "PID", "Session Name", "Session#", "Mem Usage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(processTbl);
        if (processTbl.getColumnModel().getColumnCount() > 0) {
            processTbl.getColumnModel().getColumn(0).setResizable(false);
            processTbl.getColumnModel().getColumn(3).setResizable(false);
            processTbl.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Controls", 0, 0, new java.awt.Font("Lucida Console", 1, 12))); // NOI18N

        getProcBtn.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        getProcBtn.setText("Get Running Processes");
        getProcBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getProcBtnActionPerformed(evt);
            }
        });

        stopThreadBtn.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        stopThreadBtn.setText("Stop Thread");
        stopThreadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopThreadBtnActionPerformed(evt);
            }
        });

        killProcessBtn.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        killProcessBtn.setText("Kill Process");
        killProcessBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                killProcessBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        jLabel1.setText("Refresh Rate In Seconds");

        refreshRateTxt.setFont(new java.awt.Font("Lucida Console", 0, 12)); // NOI18N
        refreshRateTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                refreshRateTxtKeyPressed(evt);
            }
        });

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        pidRadioButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        pidRadioButton.setText("PID");
        pidRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pidRadioButtonActionPerformed(evt);
            }
        });

        imageNameRadioButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        imageNameRadioButton.setText("Image Name");
        imageNameRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageNameRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pidRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imageNameRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pidRadioButton)
                .addGap(18, 18, 18)
                .addComponent(imageNameRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(getProcBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stopThreadBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(killProcessBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(refreshRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(getProcBtn)
                        .addGap(11, 11, 11)
                        .addComponent(stopThreadBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(killProcessBtn))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(refreshRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Logs", 0, 0, new java.awt.Font("Lucida Console", 1, 12))); // NOI18N

        logsTxt.setColumns(20);
        logsTxt.setRows(5);
        jScrollPane2.setViewportView(logsTxt);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getProcBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getProcBtnActionPerformed
        String refreshRate = refreshRateTxt.getText().trim();
        if (refreshRate.equals("")) {
            JOptionPane.showMessageDialog(null, "Refresh Rate Value Can't Be Empty!", "Input Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            started = true;
            stopThreadBtn.setEnabled(true);
            killProcessBtn.setEnabled(true);
            getProcessThread = new Thread() {
                @Override
                public void run() {
                    while (started) {
                        try {
                            getProcBtn.setEnabled(false);
                            refreshRateTxt.setEnabled(false);
                            utilities.listRunningProcesses(processTbl);
                            utilities.tableSorter(processTbl, 0);
                            this.sleep(Integer.parseInt(refreshRate) * 1000);
                            logsTxt.append("Thread sleeping for " + refreshRate + " seconds...\n");
                        } catch (NumberFormatException | InterruptedException ex) {
                            logsTxt.append("Class: ProcessKillerGUI - Function: getProcBtnActionPerformed " + ex.toString() + "\n");
                        }
                    }
                }
            };
            getProcessThread.start();
        }
    }//GEN-LAST:event_getProcBtnActionPerformed

    private void stopThreadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopThreadBtnActionPerformed
        started = false;
        if (!started) {
            getProcessThread.stop();
            getProcBtn.setEnabled(true);
            stopThreadBtn.setEnabled(false);
            killProcessBtn.setEnabled(false);
        }
    }//GEN-LAST:event_stopThreadBtnActionPerformed

    private void pidRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pidRadioButtonActionPerformed
        if (pidRadioButton.isSelected()) {
            imageNameRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_pidRadioButtonActionPerformed

    private void imageNameRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageNameRadioButtonActionPerformed
        if (imageNameRadioButton.isSelected()) {
            pidRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_imageNameRadioButtonActionPerformed

    private void refreshRateTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_refreshRateTxtKeyPressed
        if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') || evt.getKeyCode() == KeyEvent.VK_BACKSPACE) {
            refreshRateTxt.setEditable(true);
        } else {
            refreshRateTxt.setEditable(false);
            JOptionPane.showMessageDialog(null, "* Enter only numeric digits(0-9)", "Input Error!", JOptionPane.ERROR_MESSAGE);
            refreshRateTxt.setEditable(true);
        }
    }//GEN-LAST:event_refreshRateTxtKeyPressed

    private void killProcessBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_killProcessBtnActionPerformed
        String killCriteria = "";
        if (pidRadioButton.isSelected()) {
            killCriteria = "PID";
        } else if (imageNameRadioButton.isSelected()) {
            killCriteria = "IM";
        }
        if (processTbl.getSelectedRow() == -1) {
            logsTxt.append("Error - please select a process from table" + "\n");
        }
        try {
            String imageName = String.valueOf(processTbl.getValueAt(processTbl.getSelectedRow(), 0));
            if (killCriteria.contentEquals("PID")) {
                list = utilities.getProcessListWithName(imageName, processTbl);
                for (String processNamePID : list) {
                    Runtime.getRuntime().exec("taskkill /PID " + processNamePID.split("\\|")[0] + " /F");
                    logsTxt.append("Killed Process: " + processNamePID.split("\\|")[0] + " by PID: " + processNamePID.split("\\|")[1] + "\n");
                }
                utilities.listRunningProcesses(processTbl);
                logsTxt.append("Refreshed process table" + "\n");
                list.clear();

            } else if (killCriteria.contentEquals("IM")) {
                list = utilities.getProcessListWithName(imageName, processTbl);
                for (String processNamePID : list) {
                    Runtime.getRuntime().exec("taskkill /IM " + processNamePID.split("\\|")[0] + " /F");
                    logsTxt.append("Killed Process " + processNamePID.split("\\|")[0] + " with PID: " + processNamePID.split("\\|")[1] + "\n");
                }
                utilities.listRunningProcesses(processTbl);
                logsTxt.append("Refreshed process table" + "\n");
                list.clear();
            }
        } catch (IOException ex) {
            logsTxt.append("Class: ProcessKillerGUI - Function: killProcessBtn " + ex.toString() + "\n");
        }
    }//GEN-LAST:event_killProcessBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton getProcBtn;
    private javax.swing.JRadioButton imageNameRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton killProcessBtn;
    public static javax.swing.JTextArea logsTxt;
    private javax.swing.JRadioButton pidRadioButton;
    private javax.swing.JTable processTbl;
    private javax.swing.JTextField refreshRateTxt;
    private javax.swing.JButton stopThreadBtn;
    // End of variables declaration//GEN-END:variables
}
